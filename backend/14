import React, { useState } from 'react';
import { generateAI } from '../utils/api';
import OutputCard from './OutputCard';

export default function GeneratorForm(){
  const [platform, setPlatform] = useState('youtube');
  const [prompt, setPrompt] = useState('');
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState(null);
  const [error, setError] = useState('');

  async function handleSubmit(e){
    e.preventDefault();
    setError(''); setResult(null);
    if (!prompt.trim()) return setError('Please enter a topic or idea.');

    try{
      setLoading(true);
      const resp = await generateAI({ platform, prompt, length:'short' });
      if (!resp || !resp.success) throw new Error(resp?.error || 'AI failed');
      setResult(resp.data);
    }catch(err){
      console.error(err);
      setError('Generation failed. Try again later.');
    }finally{ setLoading(false); }
  }

  return (
    <section id="app" className="grid lg:grid-cols-2 gap-6">
      <form onSubmit={handleSubmit} className="space-y-4 bg-white p-6 rounded-lg shadow">
        <label className="block text-sm font-medium">Platform</label>
        <select value={platform} onChange={e=>setPlatform(e.target.value)} className="w-full border rounded p-2">
          <option value="youtube">YouTube</option>
          <option value="instagram">Instagram</option>
          <option value="tiktok">TikTok</option>
        </select>

        <label className="block text-sm font-medium">Topic / Brief</label>
        <textarea value={prompt} onChange={e=>setPrompt(e.target.value)} className="w-full border rounded p-3" rows={6} placeholder="eg. 5 minute morning productivity routine"></textarea>

        <div className="flex items-center gap-3">
          <button type="submit" className="bg-dark text-white px-4 py-2 rounded shadow">{loading ? 'Generating...' : 'Generate'}</button>
          <button type="button" onClick={()=>{setPrompt(''); setResult(null); setError('');}} className="px-3 py-2 border rounded">Reset</button>
        </div>

        {error && <p className="text-red-600">{error}</p>}
        <p className="text-xs text-gray-500 mt-3">Tip: Be specific (language, tone, audience) for better results.</p>
      </form>

      <div className="min-h-[200px]">
        { result ? <OutputCard data={result} /> : (
          <div className="bg-white p-6 rounded-lg shadow text-gray-600">
            <p>Results will appear here. Enter a topic and click Generate.</p>
          </div>
        )}
      </div>
    </section>
  )
}
